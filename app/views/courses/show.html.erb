<!-- This is the actual student selector/student picker/cold caller code -->

<% content_for :title do %>
  Showing Course: <%= @course.name %>
<% end %>

<div>
    <audio loop src="/assets/3sec.mp3" id="nosleep-audio"></audio>
</div>

<div class="student_selector" id="ss">
	<h4 class="student_selector_title"><a href="#" id="random_student_selector" style="color:white">Click to Select Student at Random</a></h4>

	<div class="box_content">	
		<div id="selected_student_name" class="selected_student_name_class"></div><br>
		<div id="selected_student_sid" class="selected_student_sid_class"></div>
		<div id="selected_student_note" class="selected_student_note_class"></div>

		<div id="buttons" style="visibility:hidden;">
		    <button type="button" id="answer" class="pure-button pure-button-active selector_button" style="background: rgb(28, 184, 65)">Answered</button>
		    <!-- border-radius: 4px; text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);-->
		    <button type="button" id="pass" class="pure-button pure-button-active selector_button" style="background: rgb(202, 60, 60)">Passed</button>
		    <button type="button" id="absent" class="pure-button pure-button-active selector_button" style="background: steelblue">Absent</button>
		    <button type="button" id="note" class="pure-button pure-button-active selector_button" style="background: rgb(0, 100, 50)">Note</button>
		</div>
		<h3 style="visibility:hidden;" id="last_text"><strong>Last student selected: </strong></h3>
		<p id="last_student" style="visibility:visible;"></p>
	</div>
</div>
<!--The following div just holds the blockUI prompt, only displays w\ "Note" is clicked -->
<div id="note_prompt" style="display:none; cursor: default">
		<h2>Please enter a student note</h2>
		<input type="text_area" id="note_left" /><br>
		<input type="button" id="submit" value="Submit" />
		<input type="button" id="cancel" value="Cancel" />
</div>
<% student_array = Array.new %>
<% student_note_array = {} %>
<a href="#" id="toggle_student_list">Toggle Student List</a><br>
<div id= "student_list" style="float:left; display:none" class="student_selector">
    <div class="box_content">
    	<%= link_to "Download as CSV", :controller => :courses, :action => :show, :format => :csv %>
	    <table id="student_info" class="display" cellspacing="0" width="30%" text-align="center">
	        <thead>
	        <tr>
	            <th>Student Name</th>
	            <th style="color:rgb(28, 184, 65)">Answered</th>
	            <th style="color:rgb(202, 60, 60)">Passed</th>
	            <th style="color:steelblue">Absent</th>
	        </tr>
	        </thead>
	        <tbody>
	        <% @course.students.each do |student| %>
	          <tr>
	              <td><%=student.name%></td>
	              <% student_array.push({:name => student.name, :SID => student.sid, :id => student.id}) %>
	              <% student_note_array[student.id] = {
                  :note => student.courses_student.where(:courses_id => @course.id).first.note,
                  :id => student.courses_student.where(:courses_id => @course.id).first.id ,
                  :answered => student.courses_student.where(:courses_id => @course.id).first.answered
                  }
                %>

	              <td id="<%=student.id%>_answer"><%=student.courses_student.where(:courses_id => @course.id).first.answered%></td>
	              <td id="<%=student.id%>_pass"><%=student.courses_student.where(:courses_id => @course.id).first.passed%></td>
	              <td id="<%=student.id%>_absent"><%=student.courses_student.where(:courses_id => @course.id).first.absent%></td>
	          </tr>
	        <% end %>
	        </tbody>
	    </table>
	</div>    
</div>
<br style="clear:both">
<%= link_to 'Edit Roster', edit_course_path %>
<%= link_to 'User Page', user_path(@course.user_id) %>

<!-- A whole series of button/data shenanigans, updates as needed and such -->
<script type="text/javascript">
	var oTable = null;
	var current_student;
	var courses_student = <%= raw student_note_array.to_json %>;
	$(document).ready(function() {
		var student = null;
		var last_student;
		var connection_loss_note = false;

    var absent_students = [];

		//Sets up the datatable for student info
		function initTable()
		{
			oTable = $('#student_info').dataTable({
				"paging": false,
				"scrollY": "400px",
        "scrollCollapse": true
			});
		}
		initTable();

    document.getElementById('nosleep-audio').play();

		$.ajaxSetup({
  			headers: {
    			'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
  			}
		});


		//Listener for expanding or hiding the student info datatable
		$("#toggle_student_list").click(function(e){
			e.preventDefault();
			$("#student_list").slideToggle();
		})


		//Selecting student and displaying/not displaying relevant info
		$("#random_student_selector").click(function(e){
			e.preventDefault();
			var student_list = <%= raw student_array.to_json %>;
      var min_answered = 99;
      var max_answered = 0;

      student_list.forEach(function(s){
        if (courses_student[s.id].answered < min_answered)
          min_answered = courses_student[s.id].answered;

        if (courses_student[s.id].answered > max_answered)
          max_answered = courses_student[s.id].answered;
      });

      if (max_answered == min_answered){
        student = student_list[Math.floor(Math.random()*student_list.length)];
      } else {
        var eligible_students = student_list.filter(function(s){
          return courses_student[s.id].answered < max_answered && absent_students.indexOf(s.id) == -1;
        });

        student = eligible_students[Math.floor(Math.random()*eligible_students.length)];
      }

			current_student = student.id;
			last_student = student.name+" ("+student.SID+")";

      //Display randomly selected student
      $("#selected_student_name").text(student.name);
			$("#selected_student_sid").text("("+student.SID+")");
			$("#selected_student_note").text(""); //Make sure it starts blank


			//Trim all space characters and see if there's anything in the note, don't display if just spaces
			var noteText;
			if(courses_student[current_student].note != null) //Without this conditional shenanigans happen all over
				noteText = courses_student[current_student].note.replace(/^\s+/, '').replace(/\s+$/, '');
			if(courses_student[current_student].note != null && noteText != '' )
			{
				$("#selected_student_note").text("Note: " + courses_student[current_student].note);
				$("#selected_student_note").css('visibility','visible');
			}
			else {$("#selected_student_note").css('visibility', 'hidden');} //No note? Don't just say Note for no reason


			//Show the divs with all the student info
			$("#selected_student_name").css('visibility','visible');
			$("#selected_student_sid").css('visibility','visible');
			$("#buttons").css('visibility','visible');
		});


		$("#answer").click(function(e){
			e.preventDefault();

      var local_storage_key = new Date().getTime();
      var date = new Date().toDateString();
			var course_id = <%= @course.id %>;
			var value = {action: "answer",student: {id: student.id, name: student.name}, id: course_id, date: date};
			localStorage.setItem(
          		local_storage_key,
          		JSON.stringify(value)
        	);

      courses_student[student.id].answered++;

			$.ajax({
	  			type: "POST",
	  			url: "<%= answer_course_path(@course.id) %>",
	  			data: {student:student, key:local_storage_key, date: date},
	  			success: function(data){
	  				localStorage.removeItem(parseInt(data["key"]));
	  				var pos = oTable.fnGetPosition($("#"+data["id"]+"_answer")[0]);
	  				oTable.fnUpdate(data["value"], pos[0], pos[1] );
	  				connection_error_info(1); //See if previous connection failed, let user know it's reestablished
	  			},
	  			dataType: "json",
	  			async: "false",
	  			error: function(XMLHttpRequest, textStatus, errorThrown)
        		{
        			connection_error_info(0);
        		}
			});
			display_update();
			/*document.getElementById("selected_student_name").innerHTML = "<strong>Page updating, please wait</strong>";
			//If there aren't URL params yet, put in a ? and add it, else remove the existing ones and then do that
			if(window.location.search.substring(0,1) != "?")
			{
				window.location.href += "?"+(encodeURIComponent(last_student)) + "#ss";
			}
			else
			{
				window.location.href -= window.location.search;
				window.location.href = "?"+encodeURIComponent(last_student) + "#ss";
			}*/
		});


		$("#absent").click(function(e){
			e.preventDefault();
			var local_storage_key = new Date().getTime();
      var date = new Date().toDateString();
			var course_id = <%= @course.id %>;
			var value = {action: "absent",student: {id: student.id, name: student.name}, id: course_id, date: date};
			localStorage.setItem(
          		local_storage_key,
          		JSON.stringify(value)
        	);

      absent_students.push(student.id);

			$.ajax({
	  			type: "POST",
	  			url: "<%= absent_course_path(@course.id) %>",
	  			data: {student:student, key:local_storage_key, date: date},
	  			success: function(data){
	  				var pos = oTable.fnGetPosition($("#"+data["id"]+"_absent")[0]);
	  				oTable.fnUpdate(data["value"], pos[0], pos[1] );
	  				localStorage.removeItem(parseInt(data["key"]));
	  				connection_error_info(1); //See if previous connection failed, let user know it's reestablished
	  			},
	  			dataType: "json",
	  			error: function(XMLHttpRequest, textStatus, errorThrown)
        		{
        			connection_error_info(0);
        		}
			});
			display_update();
		});


		$("#pass").click(function(e){
			e.preventDefault();
			var local_storage_key = new Date().getTime();
      var date = new Date().toDateString();
			var course_id = <%= @course.id %>;
			var value = {action: "pass",student: {id: student.id, name: student.name}, id: course_id, date: date};
			localStorage.setItem(
          		local_storage_key,
          		JSON.stringify(value)
        	);
			$.ajax({
	  			type: "POST",
	  			url: "<%= pass_course_path(@course.id) %>",
	  			data: {student:student, key:local_storage_key, date: date},
	  			success: function(data){
	  				var pos = oTable.fnGetPosition($("#"+data["id"]+"_pass")[0]);
	  				oTable.fnUpdate(data["value"], pos[0], pos[1] );
	  				localStorage.removeItem(parseInt(data["key"]));
	  				connection_error_info(1);
	  			},
	  			dataType: "json",
	  			error: function(XMLHttpRequest, textStatus, errorThrown)
        		{
        			connection_error_info(0);  //See if previous connection failed, let user know it's reestablished
        		}
			});
			display_update();
			
		});


		//Figure out a way to update note w/o reload
		$("#note").click(function(e){
			$('#note_left').val(courses_student[current_student].note);
			$.blockUI({message: $('#note_prompt'), css: {width: '275px'}})
		})
		$("#submit").click(function(e){
			$.unblockUI();
			$.ajax({
	  			type: "POST",
	  			url: "/courses_students/"+courses_student[current_student].id+"/update_note.json",
	  			data: {note:$("#note_left").val()},
	  			success: function(data){
	  				$("#flash").html("<strong><p class=\"flash-notice\">"+data["status"]+"</p></strong>");
					$("#selected_student_note").text(" Note: " + data["note"]);
					courses_student[current_student].note = data["note"];
					$("#selected_student_note").text("Note: " + courses_student[current_student].note);
					$("#selected_student_note").css('visibility','visible');
	  			},
	  			dataType: "json"
			});
		})
		$("#cancel").click(function(e){
			$.unblockUI();
			return false;
		});


		//Gets called whenever a submission of some sort occurs to check connection status, displays connections and syncs appropriately
		function connection_error_info(call_type)
		{
			if(call_type == 0) //Error call type, lost connection
			{
				if(!connection_loss_note)
				{	
	    			alert('The connection appears to be lost. Do not refresh the page, the application will work and update when the connection is reestablished');
	    			connection_loss_note = true;
	    		}
		    	$("#flash").html("<strong><p class=\"flash-error\">Connection still not found</p></strong>");
			}
			else //Established connection, if was error on last call flash connection found
			{
				if(connection_loss_note)
	  				{
	  					connection_loss_note = false;
	  					$("#flash").html("<strong><p class=\"flash-notice\">Connection established, records updated</p></strong>");	
	  					sync();
	  				}
	  			else
	  				$("#flash").html("");

			}
		}
		//Change necessary visibilities, set last student text appropriately
		function display_update()
		{
			$("#buttons").css('visibility','hidden');
			$("#last_student").text("Previous student: "+ student.name+ "("+student.SID+")");
		}
})
	
</script>